{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/Auth_1/components/dashboard/dashboard.component.css","webpack:///./src/app/Auth_1/components/dashboard/dashboard.component.html","webpack:///./src/app/Auth_1/components/dashboard/dashboard.component.ts","webpack:///./src/app/Auth_1/components/forgot-password/forgot-password.component.css","webpack:///./src/app/Auth_1/components/forgot-password/forgot-password.component.html","webpack:///./src/app/Auth_1/components/forgot-password/forgot-password.component.ts","webpack:///./src/app/Auth_1/components/sign-in/sign-in.component.css","webpack:///./src/app/Auth_1/components/sign-in/sign-in.component.html","webpack:///./src/app/Auth_1/components/sign-in/sign-in.component.ts","webpack:///./src/app/Auth_1/components/sign-up/sign-up.component.css","webpack:///./src/app/Auth_1/components/sign-up/sign-up.component.html","webpack:///./src/app/Auth_1/components/sign-up/sign-up.component.ts","webpack:///./src/app/Auth_1/components/verify-email/verify-email.component.css","webpack:///./src/app/Auth_1/components/verify-email/verify-email.component.html","webpack:///./src/app/Auth_1/components/verify-email/verify-email.component.ts","webpack:///./src/app/Auth_1/shared/guard/auth.guard.ts","webpack:///./src/app/Auth_1/shared/guard/secure-inner-pages.guard.ts","webpack:///./src/app/Auth_1/shared/routing/app-routing.module.ts","webpack:///./src/app/Auth_1/shared/services/auth.service.ts","webpack:///./src/app/angular-material.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/board/board.component.css","webpack:///./src/app/board/board.component.html","webpack:///./src/app/board/board.component.ts","webpack:///./src/app/card/card.component.css","webpack:///./src/app/card/card.component.html","webpack:///./src/app/card/card.component.ts","webpack:///./src/app/dialogs/player-dialog/player-dialog.component.css","webpack:///./src/app/dialogs/player-dialog/player-dialog.component.html","webpack:///./src/app/dialogs/player-dialog/player-dialog.component.ts","webpack:///./src/app/game.service.ts","webpack:///./src/app/game/game.component.css","webpack:///./src/app/game/game.component.html","webpack:///./src/app/game/game.component.ts","webpack:///./src/app/game/game.module.ts","webpack:///./src/app/pipes/count.pipe.ts","webpack:///./src/app/pipes/sort-players.pipe.ts","webpack:///./src/app/shared/card.model.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL0F1dGhfMS9jb21wb25lbnRzL2Rhc2hib2FyZC9kYXNoYm9hcmQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<!-- Top navigation -->\\n<nav class=\\\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\\\">\\n  <a class=\\\"navbar-brand col-sm-3 col-md-2 mr-0\\\" routerLink=\\\"/game\\\">\\n    <!-- <img class=\\\"brand-logo\\\" src=\\\"assets/logo-positronx-white.svg\\\" alt=\\\"positronX.io Logo\\\"> -->\\n    <span class=\\\"dasboard-text\\\">Dashboard</span>\\n  </a>\\n</nav>\\n\\n<!-- Sidebar navigation -->\\n<div class=\\\"container-fluid\\\">\\n  <div class=\\\"row\\\">\\n\\n    <nav class=\\\"col-md-2 d-md-block bg-light sidebar\\\">\\n      <div class=\\\"sidebar-sticky\\\">\\n        <ul class=\\\"nav flex-column\\\">\\n          <li class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link active\\\">\\n              <i class=\\\"fas fa-user\\\"></i>User Profile\\n            </a>\\n          </li>\\n          <!-- Calling SignOut() Api from AuthService -->\\n          <li class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link\\\" (click)=\\\"authService.SignOut()\\\">\\n              <i class=\\\"fas fa-sign-out-alt\\\"></i>Log out\\n            </a>\\n          </li>\\n        </ul>\\n      </div>\\n    </nav>\\n\\n    <!-- Main content -->\\n    <main role=\\\"main\\\" class=\\\"col-md-9 ml-sm-auto col-lg-10 px-4\\\">\\n      <div class=\\\"inner-adjust\\\">\\n\\n        <div class=\\\"pt-3 pb-2 mb-3 border-bottom\\\">\\n          <h1 class=\\\"h2\\\">User Profile</h1>\\n        </div>\\n        <!-- Show user data when logged in -->\\n        <div class=\\\"row\\\" *ngIf=\\\"authService.userData as user\\\">\\n          <div class=\\\"col-md-12\\\">\\n            <div class=\\\"media\\\">\\n              <img class=\\\"align-self-start mr-5 img-thumbnail rounded-circle\\\" src=\\\"{{(user.photoURL) ? user.photoURL : '/assets/dummy-user.png'}}\\\"\\n                alt=\\\"{{user.displayName}}\\\">\\n              <div class=\\\"media-body\\\">\\n                <h1>Hello: <strong>{{(user.displayName) ? user.displayName : 'Guest'}}</strong></h1>\\n                <p>User ID: <strong>{{user.uid}}</strong></p>\\n                <p>Email: <strong>{{user.email}}</strong></p>\\n                <p>Email Verified: <strong>{{user.emailVerified}}</strong></p>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n\\n      </div>\\n    </main>\\n\\n  </div>\\n</div>\\n\"","import { Component, NgZone, OnInit } from '@angular/core';\n\nimport { AuthService } from '../../shared/services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor(\n    public authService: AuthService,\n    public router: Router,\n    public ngZone: NgZone\n  ) { }\n\n  ngOnInit() { }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL0F1dGhfMS9jb21wb25lbnRzL2ZvcmdvdC1wYXNzd29yZC9mb3Jnb3QtcGFzc3dvcmQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"displayTable\\\">\\n  <div class=\\\"displayTableCell\\\">\\n    <div class=\\\"authBlock\\\">\\n      <h3>Reset Password</h3>\\n\\n      <p class=\\\"text-center\\\">Please enter your email address to request a password reset.</p>\\n\\n      <div class=\\\"formGroup\\\">\\n        <input type=\\\"email\\\" class=\\\"formControl\\\" placeholder=\\\"Email Address\\\" #passwordResetEmail required>\\n      </div>\\n\\n      <!-- Calling ForgotPassword from AuthService Api -->\\n      <div class=\\\"formGroup\\\">\\n        <input type=\\\"submit\\\" class=\\\"btn btnPrimary\\\" value=\\\"Reset Password\\\" (click)=\\\"authService.ForgotPassword(passwordResetEmail.value)\\\">\\n      </div>\\n    </div>\\n\\n    <div class=\\\"redirectToLogin\\\">\\n      <span>Go back to ? <span class=\\\"redirect\\\" routerLink=\\\"/sign-in\\\">Log In</span></span>\\n    </div>\\n\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from \"../../shared/services/auth.service\";\n\n@Component({\n  selector: 'app-forgot-password',\n  templateUrl: './forgot-password.component.html',\n  styleUrls: ['./forgot-password.component.css']\n})\n\nexport class ForgotPasswordComponent implements OnInit {\n\n  constructor(\n    public authService: AuthService\n  ) { }\n\n  ngOnInit() {\n  }\n\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL0F1dGhfMS9jb21wb25lbnRzL3NpZ24taW4vc2lnbi1pbi5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"displayTable\\\">\\n  <div class=\\\"displayTableCell\\\">\\n\\n    <!-- <div class=\\\"px-logo\\\"> -->\\n      <!-- <a href=\\\"https://www.positronx.io\\\" target=\\\"_blank\\\"> -->\\n        <!-- <img src=\\\"https://www.positronx.io/wp-content/themes/positronx/img/logo-positronx-white.svg\\\" alt=\\\"positronX.io - Learn Full Stack Development\\\"> -->\\n      <!-- </a> -->\\n    <!-- </div> -->\\n\\n    <div class=\\\"authBlock\\\">\\n      <h3>Sign In</h3>\\n      <div class=\\\"formGroup\\\">\\n        <input type=\\\"text\\\" class=\\\"formControl\\\" placeholder=\\\"Username\\\" #userName required>\\n      </div>\\n\\n      <div class=\\\"formGroup\\\">\\n        <input type=\\\"password\\\" class=\\\"formControl\\\" placeholder=\\\"Password\\\" #userPassword required>\\n      </div>\\n\\n      <!-- Calling SignIn Api from AuthService -->\\n      <div class=\\\"formGroup\\\">\\n        <input type=\\\"button\\\" class=\\\"btn btnPrimary\\\" value=\\\"Log in\\\" (click)=\\\"authService.SignIn(userName.value, userPassword.value)\\\">\\n      </div>\\n\\n      <div class=\\\"formGroup\\\">\\n        <span class=\\\"or\\\"><span class=\\\"orInner\\\">Or</span></span>\\n      </div>\\n\\n      <!-- Calling GoogleAuth Api from AuthService -->\\n      <div class=\\\"formGroup\\\">\\n        <button type=\\\"button\\\" class=\\\"btn googleBtn\\\" (click)=\\\"authService.GoogleAuth()\\\">\\n          <i class=\\\"fab fa-google-plus-g\\\"></i>\\n          Log in with Google\\n        </button>\\n      </div>\\n\\n      <div class=\\\"forgotPassword\\\">\\n        <span routerLink=\\\"/forgot-password\\\">Forgot Password?</span>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"redirectToLogin\\\">\\n      <span>Don't have an account?<span class=\\\"redirect\\\" routerLink=\\\"/register-user\\\"> Sign Up</span></span>\\n    </div>\\n\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from \"../../shared/services/auth.service\";\n\n@Component({\n  selector: 'app-sign-in',\n  templateUrl: './sign-in.component.html',\n  styleUrls: ['./sign-in.component.css']\n})\n\nexport class SignInComponent implements OnInit {\n\n  constructor(\n    public authService: AuthService\n  ) { }\n\n  ngOnInit() { }\n\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL0F1dGhfMS9jb21wb25lbnRzL3NpZ24tdXAvc2lnbi11cC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"displayTable\\\">\\n  <div class=\\\"displayTableCell\\\">\\n\\n    <!-- <div class=\\\"px-logo\\\"> -->\\n      <!-- <a href=\\\"https://www.positronx.io\\\" target=\\\"_blank\\\"> -->\\n        <!-- <img src=\\\"https://www.positronx.io/wp-content/themes/positronx/img/logo-positronx-white.svg\\\" alt=\\\"positronX.io - Learn Full Stack Development\\\"> -->\\n      <!-- </a> -->\\n    <!-- </div> -->\\n\\n    <div class=\\\"authBlock\\\">\\n      <h3>Sign Up</h3>\\n\\n      <div class=\\\"formGroup\\\">\\n        <input type=\\\"email\\\"  class=\\\"formControl\\\" placeholder=\\\"Email Address\\\" #userEmail required>\\n      </div>\\n\\n      <div class=\\\"formGroup\\\">\\n        <input type=\\\"password\\\" class=\\\"formControl\\\" placeholder=\\\"Password\\\" #userPwd required>\\n      </div>\\n\\n      <div class=\\\"formGroup\\\">\\n        <input type=\\\"button\\\" class=\\\"btn btnPrimary\\\" value=\\\"Sign Up\\\" (click)=\\\"authService.SignUp(userEmail.value, userPwd.value)\\\">\\n      </div>\\n\\n      <div class=\\\"formGroup\\\">\\n        <span class=\\\"or\\\"><span class=\\\"orInner\\\">Or</span></span>\\n      </div>\\n\\n      <!-- Continue with Google -->\\n      <div class=\\\"formGroup\\\">\\n        <button type=\\\"button\\\" class=\\\"btn googleBtn\\\" (click)=\\\"authService.GoogleAuth()\\\">\\n          <i class=\\\"fab fa-google-plus-g\\\"></i>\\n          Continue with Google\\n        </button>\\n      </div>\\n\\n    </div>\\n\\n    <div class=\\\"redirectToLogin\\\">\\n      <span>Already have an account? <span class=\\\"redirect\\\" routerLink=\\\"/sign-in\\\">Log In</span></span>\\n    </div>\\n  </div>\\n\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from \"../../shared/services/auth.service\";\n\n@Component({\n  selector: 'app-sign-up',\n  templateUrl: './sign-up.component.html',\n  styleUrls: ['./sign-up.component.css']\n})\n\nexport class SignUpComponent implements OnInit {\n\n  constructor(\n    public authService: AuthService\n  ) { }\n\n  ngOnInit() { }\n\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL0F1dGhfMS9jb21wb25lbnRzL3ZlcmlmeS1lbWFpbC92ZXJpZnktZW1haWwuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"displayTable\\\">\\n  <div class=\\\"displayTableCell\\\">\\n\\n    <!-- <div class=\\\"px-logo\\\"> -->\\n      <!-- <a href=\\\"https://www.positronx.io\\\" target=\\\"_blank\\\"> -->\\n        <!-- <img src=\\\"https://www.positronx.io/wp-content/themes/positronx/img/logo-positronx-white.svg\\\" alt=\\\"positronX.io - Learn Full Stack Development\\\"> -->\\n      <!-- </a> -->\\n    <!-- </div> -->\\n\\n    <div class=\\\"authBlock\\\">\\n      <h3>Thank You for Registering</h3>\\n\\n      <div class=\\\"formGroup\\\" *ngIf=\\\"authService.userData as user\\\">\\n        <p class=\\\"text-center\\\">We have sent a confirmation email to <strong>{{user.email}}</strong>.</p>\\n        <p class=\\\"text-center\\\">Please check your email and click on the link to verfiy your email address.</p>\\n      </div>\\n\\n      <!-- Calling SendVerificationMail() method using authService Api -->\\n      <div class=\\\"formGroup\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btnPrimary\\\" (click)=\\\"authService.SendVerificationMail()\\\">\\n          <i class=\\\"fas fa-redo-alt\\\"></i>\\n          Resend Verification Email\\n        </button>\\n      </div>\\n\\n    </div>\\n\\n    <div class=\\\"redirectToLogin\\\">\\n      <span>Go back to?<span class=\\\"redirect\\\" routerLink=\\\"/sign-in\\\"> Sign in</span></span>\\n    </div>\\n\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from \"../../shared/services/auth.service\";\n\n@Component({\n  selector: 'app-verify-email',\n  templateUrl: './verify-email.component.html',\n  styleUrls: ['./verify-email.component.css']\n})\nexport class VerifyEmailComponent implements OnInit {\n\n  constructor(\n    public authService: AuthService\n  ) { }\n\n  ngOnInit() {\n  }\n\n}","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { AuthService } from \"../../shared/services/auth.service\";\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class AuthGuard implements CanActivate {\n  \n  constructor(\n    public authService: AuthService,\n    public router: Router\n  ){ }\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n    if(this.authService.isLoggedIn !== true) {\n      this.router.navigate(['sign-in'])\n    }\n    return true;\n  }\n\n}","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { AuthService } from \"../../shared/services/auth.service\";\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class SecureInnerPagesGuard implements CanActivate {\n\n  constructor(\n    public authService: AuthService,\n    public router: Router\n  ) { }\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n    if(this.authService.isLoggedIn) {\n       window.alert(\"You are not allowed to access this URL!\");\n       this.router.navigate(['dashboard'])\n    }\n    return true;\n  }\n\n}","import { RouterModule, Routes } from '@angular/router';\n\n// Import canActivate guard services\nimport { AuthGuard } from \"../../shared/guard/auth.guard\";\nimport { DashboardComponent } from '../../components/dashboard/dashboard.component';\nimport { ForgotPasswordComponent } from '../../components/forgot-password/forgot-password.component';\nimport { NgModule } from '@angular/core';\nimport { SecureInnerPagesGuard } from \"../../shared/guard/secure-inner-pages.guard\";\n// Required components for which route services to be activated\nimport { SignInComponent } from '../../components/sign-in/sign-in.component';\nimport { SignUpComponent } from '../../components/sign-up/sign-up.component';\nimport { VerifyEmailComponent } from '../../components/verify-email/verify-email.component';\n// import { AppComponent } from 'src/app/app.component';\nimport { GameComponent } from 'src/app/game/game.component';\nimport { BoardComponent } from 'src/app/board/board.component';\nimport { PlayerDialogComponent } from 'src/app/dialogs/player-dialog/player-dialog.component';\n\n\n// Include route guard in routes array\nconst routes: Routes = [\n  { path: '', redirectTo: '/sign-in', pathMatch: 'full'},\n  { path: 'sign-in', component: SignInComponent, canActivate: [SecureInnerPagesGuard]},\n  { path: 'register-user', component: SignUpComponent, canActivate: [SecureInnerPagesGuard]},\n  { path: 'dashboard', component: DashboardComponent},\n  { path: 'game', component: GameComponent, canActivate: [AuthGuard] },\n  { path: 'board', component: BoardComponent, canActivate: [AuthGuard] },\n  { path: 'dialogs/player-dialog', component: PlayerDialogComponent , canActivate: [AuthGuard] },\n  \n  \n  { path: 'forgot-password', component: ForgotPasswordComponent, canActivate: [SecureInnerPagesGuard] },\n  { path: 'verify-email-address', component: VerifyEmailComponent, canActivate: [SecureInnerPagesGuard] }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule ]\n})\n\nexport class AppRoutingModule1 { }\n","import { Injectable, NgZone } from '@angular/core';\nimport { User } from \"../services/user\";\nimport { auth } from 'firebase/app';\nimport { AngularFireAuth } from \"@angular/fire/auth\";\nimport { AngularFirestore, AngularFirestoreDocument } from '@angular/fire/firestore';\nimport { Router } from \"@angular/router\";\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class AuthService {\n  userData: any; // Save logged in user data\n\n  constructor(\n    public afs: AngularFirestore,   // Inject Firestore service\n    public afAuth: AngularFireAuth, // Inject Firebase auth service\n    public router: Router,  \n    public ngZone: NgZone // NgZone service to remove outside scope warning\n  ) {    \n    /* Saving user data in localstorage when \n    logged in and setting up null when logged out */\n    this.afAuth.authState.subscribe(user => {\n      if (user) {\n        this.userData = user;\n        localStorage.setItem('user', JSON.stringify(this.userData));\n        JSON.parse(localStorage.getItem('user'));\n      } else {\n        localStorage.setItem('user', null);\n        JSON.parse(localStorage.getItem('user'));\n      }\n    })\n  }\n\n  // Sign in with email/password\n  SignIn(email, password) {\n    return this.afAuth.auth.signInWithEmailAndPassword(email, password)\n      .then((result) => {\n        this.ngZone.run(() => {\n          this.router.navigate(['dashboard']);\n        });\n        this.SetUserData(result.user);\n      }).catch((error) => {\n        window.alert(error.message)\n      })\n  }\n\n  // Sign up with email/password\n  SignUp(email, password) {\n    return this.afAuth.auth.createUserWithEmailAndPassword(email, password)\n      .then((result) => {\n        /* Call the SendVerificaitonMail() function when new user sign \n        up and returns promise */\n        this.SendVerificationMail();\n        this.SetUserData(result.user);\n      }).catch((error) => {\n        window.alert(error.message)\n      })\n  }\n\n  // Send email verfificaiton when new user sign up\n  SendVerificationMail() {\n    return this.afAuth.auth.currentUser.sendEmailVerification()\n    .then(() => {\n      this.router.navigate(['verify-email-address']);\n    })\n  }\n\n  // Reset Forggot password\n  ForgotPassword(passwordResetEmail) {\n    return this.afAuth.auth.sendPasswordResetEmail(passwordResetEmail)\n    .then(() => {\n      window.alert('Password reset email sent, check your inbox.');\n    }).catch((error) => {\n      window.alert(error)\n    })\n  }\n\n  // Returns true when user is looged in and email is verified\n  get isLoggedIn(): boolean {\n    const user = JSON.parse(localStorage.getItem('user'));\n    return (user !== null && user.emailVerified !== false) ? true : false;\n  }\n\n  // Sign in with Google\n  GoogleAuth() {\n    return this.AuthLogin(new auth.GoogleAuthProvider());\n  }\n\n  // Auth logic to run auth providers\n  AuthLogin(provider) {\n     this.afAuth.auth.signInWithRedirect(provider).then(function(){\n       return auth().getRedirectResult();\n     })\n    .then(function(result) {\n       this.ngZone.run(() => {\n          this.router.navigate(['dashboard']);\n        })\n      this.SetUserData(result.user);\n    }).catch((error) => {\n      window.alert(error)\n    })\n  }\n\n  /* Setting up user data when sign in with username/password, \n  sign up with username/password and sign in with social auth  \n  provider in Firestore database using AngularFirestore + AngularFirestoreDocument service */\n  SetUserData(user) {\n    const userRef: AngularFirestoreDocument<any> = this.afs.doc(`users/${user.uid}`);\n    const userData: User = {\n      uid: user.uid,\n      email: user.email,\n      displayName: user.displayName,\n      photoURL: user.photoURL,\n      emailVerified: user.emailVerified\n    }\n    return userRef.set(userData, {\n      merge: true\n    })\n  }\n\n  // Sign out \n  SignOut() {\n    return this.afAuth.auth.signOut().then(() => {\n      localStorage.removeItem('user');\n      this.router.navigate(['sign-in']);\n    })\n  }\n\n}","import { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport {\n  MatButtonModule,\n  MatSelectModule,\n  MatCardModule,\n  MatProgressBarModule,\n  MatDialogModule,\n  MatInputModule\n} from '@angular/material';\n\n@NgModule({\n  imports: [\n    BrowserAnimationsModule\n  ],\n  exports: [\n    MatButtonModule,\n    MatSelectModule,\n    MatCardModule,\n    MatProgressBarModule,\n    MatDialogModule,\n    MatInputModule\n  ]\n})\nexport class AngularMaterialModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"\\n<router-outlet></router-outlet>\\n\"","import { Component} from '@angular/core';\n// tslint:disable-next-line:import-blacklist\nimport 'rxjs/Rx';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n  \n})\nexport class AppComponent {\n  constructor() {}\n\n \n}\n","import { NgModule } from '@angular/core';\n// Auth service\nimport { AuthService } from './Auth_1/shared/services/auth.service';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { DashboardComponent } from './Auth_1/components/dashboard/dashboard.component';\nimport { ForgotPasswordComponent } from './Auth_1/components/forgot-password/forgot-password.component';\nimport { AngularFireAuthModule } from '@angular/fire/auth';\n//import { AngularFireModule } from '@angular/fire';\nimport { AngularFirestoreModule } from '@angular/fire/firestore';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { SignInComponent } from './Auth_1/components/sign-in/sign-in.component';\nimport { SignUpComponent } from './Auth_1/components/sign-up/sign-up.component';\nimport { VerifyEmailComponent } from './Auth_1/components/verify-email/verify-email.component';\nimport { environment } from '../environments/environment';\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule1 } from './Auth_1/shared/routing/app-routing.module';\nimport { CardComponent } from './card/card.component';\nimport { SortPlayersPipe } from './pipes/sort-players.pipe';\nimport { PlayerDialogComponent } from './dialogs/player-dialog/player-dialog.component';\nimport { CountPipe } from './pipes/count.pipe';\nimport { AngularMaterialModule } from './angular-material.module';\nimport { importType } from '@angular/compiler/src/output/output_ast';\nimport { from } from 'rxjs';\nimport { AngularFireModule } from '@angular/fire';\nimport { GameComponent } from './game/game.component';\nimport { BoardComponent } from './board/board.component';\nimport { GameModule } from './game/game.module';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CardComponent,\n    SortPlayersPipe,\n    CountPipe,\n    PlayerDialogComponent,\n    SignInComponent,\n    SignUpComponent,\n    DashboardComponent,\n    ForgotPasswordComponent,\n    VerifyEmailComponent,\n    GameComponent,\n    BoardComponent\n   \n   \n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule1,\n    AngularFireModule.initializeApp(environment.firebase ),\n    AngularFireAuthModule,\n    AngularFirestoreModule,\n    ReactiveFormsModule,\n    FormsModule,\n    HttpClientModule,\n    AngularMaterialModule,\n    GameModule\n  ],\n  entryComponents: [\n    PlayerDialogComponent\n  ],\n  providers: [AuthService],\n  bootstrap: [AppComponent]\n})\n\nexport class AppModule { }\n","module.exports = \" .card-panel {\\n  display: inline-block;\\n  background-color: transparent;\\n}\\n\\n.card-body {\\n  padding: 0;\\n  height: 150px;\\n  cursor: pointer;\\n}\\n\\n.img-width {\\n  width: 110px;\\n}\\n\\n.real-img {\\n  margin: 20% 0;\\n}\\n\\n@media screen and (max-width: 768px) {\\n  .card-body {\\n    height: auto;\\n  }\\n\\n  .img-style {\\n    margin-bottom: 20%;\\n  }\\n}\\n\\n.back-img {\\n  background-image: url('back-img.jpg');\\n  background-repeat: no-repeat;\\n  background-attachment: fixed;\\n  \\n  }\\n\\n.good-job {\\n  text-align: center;\\n  color: #38d6f186;\\n  font-size: 75px;\\n  text-shadow: 0 0 15px wheat;\\n  }\\n\\n.counter-text {\\n    text-shadow: 0 0 10px gold;\\n    font-family: fantasy;\\n    color: aquamarine;\\n    opacity: 0.8;\\n    text-align: center;\\n    font-size: 35px;\\n  }\\n\\n.head-style {\\n    text-shadow: 0 0 10px gold;\\n    color:rgba(23, 122, 134, 0.7);\\n    }\\n    \\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYm9hcmQvYm9hcmQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQ0FBQztFQUNDLHFCQUFxQjtFQUNyQiw2QkFBNkI7QUFDL0I7O0FBRUE7RUFDRSxVQUFVO0VBQ1YsYUFBYTtFQUNiLGVBQWU7QUFDakI7O0FBRUE7RUFDRSxZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxhQUFhO0FBQ2Y7O0FBRUE7RUFDRTtJQUNFLFlBQVk7RUFDZDs7RUFFQTtJQUNFLGtCQUFrQjtFQUNwQjtBQUNGOztBQUNBO0VBQ0UscUNBQXVEO0VBQ3ZELDRCQUE0QjtFQUM1Qiw0QkFBNEI7O0VBRTVCOztBQUVGO0VBQ0Usa0JBQWtCO0VBQ2xCLGdCQUFnQjtFQUNoQixlQUFlO0VBQ2YsMkJBQTJCO0VBQzNCOztBQUNBO0lBQ0UsMEJBQTBCO0lBQzFCLG9CQUFvQjtJQUNwQixpQkFBaUI7SUFDakIsWUFBWTtJQUNaLGtCQUFrQjtJQUNsQixlQUFlO0VBQ2pCOztBQUNBO0lBQ0UsMEJBQTBCO0lBQzFCLDZCQUE2QjtJQUM3QiIsImZpbGUiOiJzcmMvYXBwL2JvYXJkL2JvYXJkLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIgLmNhcmQtcGFuZWwge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xufVxuXG4uY2FyZC1ib2R5IHtcbiAgcGFkZGluZzogMDtcbiAgaGVpZ2h0OiAxNTBweDtcbiAgY3Vyc29yOiBwb2ludGVyO1xufVxuXG4uaW1nLXdpZHRoIHtcbiAgd2lkdGg6IDExMHB4O1xufVxuXG4ucmVhbC1pbWcge1xuICBtYXJnaW46IDIwJSAwO1xufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xuICAuY2FyZC1ib2R5IHtcbiAgICBoZWlnaHQ6IGF1dG87XG4gIH1cblxuICAuaW1nLXN0eWxlIHtcbiAgICBtYXJnaW4tYm90dG9tOiAyMCU7XG4gIH1cbn1cbi5iYWNrLWltZyB7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybCguLi8uLi9hc3NldHMvaW1hZ2VzL2JhY2staW1nLmpwZyk7XG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gIGJhY2tncm91bmQtYXR0YWNobWVudDogZml4ZWQ7XG4gIFxuICB9XG4gIFxuLmdvb2Qtam9iIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBjb2xvcjogIzM4ZDZmMTg2O1xuICBmb250LXNpemU6IDc1cHg7XG4gIHRleHQtc2hhZG93OiAwIDAgMTVweCB3aGVhdDtcbiAgfVxuICAuY291bnRlci10ZXh0IHtcbiAgICB0ZXh0LXNoYWRvdzogMCAwIDEwcHggZ29sZDtcbiAgICBmb250LWZhbWlseTogZmFudGFzeTtcbiAgICBjb2xvcjogYXF1YW1hcmluZTtcbiAgICBvcGFjaXR5OiAwLjg7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIGZvbnQtc2l6ZTogMzVweDtcbiAgfVxuICAuaGVhZC1zdHlsZSB7XG4gICAgdGV4dC1zaGFkb3c6IDAgMCAxMHB4IGdvbGQ7XG4gICAgY29sb3I6cmdiYSgyMywgMTIyLCAxMzQsIDAuNyk7XG4gICAgfVxuICAgICJdfQ== */\"","module.exports = \"\\n<div class=\\\"container-fluid\\\">\\n\\n  <!-- SELECT BOARD SIZE SECTION -->\\n  <mat-form-field class=\\\"full-width\\\">\\n    <mat-select placeholder=\\\"Select a Board Size:\\\" [(ngModel)]=\\\"boardSize\\\" [disabled]=\\\"isGameRunning\\\">\\n      <mat-option value=\\\"4\\\">4x4</mat-option>\\n      <mat-option value=\\\"6\\\">6x6</mat-option>\\n    </mat-select>\\n  </mat-form-field>\\n\\n  <hr />\\n\\n  <!-- START AND STOP BUTTONS SECTION  -->\\n  <div class=\\\"btn-group btn-group-justified\\\">\\n    <div class=\\\"btn-group\\\">\\n      <button mat-raised-button color=\\\"primary\\\" class=\\\"btn-start\\\" (click)=\\\"onStart()\\\" [disabled]=\\\"isGameRunning\\\">START</button>\\n    </div>\\n    <div class=\\\"btn-group\\\">\\n      <button mat-raised-button color=\\\"warn\\\" class=\\\"btn-stop\\\" (click)=\\\"onStop()\\\" [disabled]=\\\"!isGameRunning\\\">STOP</button>\\n    </div>\\n  </div><br />\\n\\n  <hr />\\n\\n  <!-- THE BOARD SECTION -->\\n  <mat-card class=\\\"back-img\\\">\\n\\n    <!-- THE HEADER -->\\n    <mat-card-header>\\n      <mat-card-title><h1 class=\\\"head-style\\\">Board Size: {{boardSize}}x{{boardSize}}</h1></mat-card-title>\\n    </mat-card-header>\\n\\n    <hr>\\n\\n    <!-- HERE IS WHERE THE CARDS PLACED -->\\n    <mat-card-content>\\n\\n      <!-- PROGRESS BAR (showing when loading finished (3 seconds after clicking on START) ) -->\\n      <mat-progress-bar mode=\\\"indeterminate\\\" *ngIf=\\\"showLoading\\\"></mat-progress-bar>\\n\\n      <!-- THE COUNT TIME -->\\n      <p class=\\\"counter-text\\\">{{minutes | countPipe}}:{{seconds | countPipe}}</p>\\n\\n      <hr>\\n\\n      <!-- HERE IS THE CARDS -->\\n      <table class=\\\"table table-responsive table-condensed\\\">\\n        <tr *ngFor=\\\"let tr of cards; let row = index\\\" class=\\\"borderless\\\">\\n          <td *ngFor=\\\"let card of cards[row]\\\">\\n            <app-card [card]=\\\"card\\\" (click)=\\\"onClick(card)\\\"></app-card>\\n          </td>\\n        </tr>\\n      </table>\\n\\n      <!-- WHEN THE IS OVER -->\\n      <div *ngIf=\\\"!isGameRunning && isGameOver\\\" [@in]>\\n        <p class=\\\"good-job\\\" >GOOD JOB!!</p>\\n      </div>\\n\\n    </mat-card-content>\\n\\n  </mat-card>\\n  <br>\\n  <ul>\\n    <button mat-raised-button color=\\\"primary\\\" class=\\\"common-btn btn\\\"  routerLink='/game'>Finish</button></ul>\\n\\n  \\n\\n</div>\\n\"","import { Component, Input } from '@angular/core';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\n\nimport { Card } from '../shared/card.model';\nimport { GameService } from '../game.service';\nimport { MatDialog } from '@angular/material';\nimport { Accomplishment } from '../shared/accomplishment.model';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { PlayerDialogComponent } from '../dialogs/player-dialog/player-dialog.component';\n// import { Router } from \"@angular/router\";\n\n@Component({\n  selector: 'app-board',\n  templateUrl: './board.component.html',\n  styleUrls: ['./board.component.css'],\n  animations: [\n    trigger('in', [\n      transition('void => *', [\n        style({\n          transform: 'rotate(360deg) scale(0)'\n        }),\n        animate(1000, style({\n          transform: 'rotate(0) scale(1)'\n        }))\n      ])\n    ])\n  ]\n})\nexport class BoardComponent {\n\n  constructor(private gameService: GameService ,\n    private dialog: MatDialog  ) { }\n  boardSize = '4'; // stored as string to set a default value to Select input (if as a number it won't work).\n  cards: Card[][] = [];\n  showLoading = false;\n  isGameRunning = false;\n  isGameOver = false;\n  clickedCard: Card; // this is the first card was clicked, after well compared with the second card.\n  clicks = 0; // count the clicks. (maximum 2)\n  delayTimer;\n\n  players: Accomplishment [] = [];\n  startedTime: number; // this will hold the started time as milliseconds.\n\n  countInterval: any;\n  seconds = 0;\n  minutes = 0;\n  \n  ngOnInit(): void { // getting the accomplishments from the server (firebase) if there is.\n    this.gameService.getAccomplishments().\n    subscribe(\n       (players) => {\n        if (players !== null) {\n          this.players = players;\n        }\n      }, (error: HttpErrorResponse ) => { // log to the console in error case.\n        console.log(error.message);\n        console.log(error);\n      }\n    );\n  }\n  onStart(): void {\n    const tempCards = this.gameService.getCards(+this.boardSize); // get the cards as a completely new instances.\n    this.gameService.suffleCards(tempCards, +this.boardSize); // then suffle the Cards.\n\n    this.isGameOver = false;\n    this.showLoading = true;\n    this.isGameRunning = true;\n\n    this.delayTimer = setTimeout(() => {\n        this.cards = tempCards; // setting the 'Real Cards' to the tempCards.\n        this.showLoading = false;\n        this.startedTime = new Date().getTime(); // current time stored as milliseconds as we said.\n\n        this.countInterval = setInterval(() => { // just a simple timer to out put to the user.\n          this.seconds++;\n          if (this.seconds === 59) {\n            this.seconds = 0;\n            this.minutes++;\n          }\n        }, 1000);\n\n      }, 3000);\n\n  }\n  onStop(): void { // reset all\n    this.cards = [];\n    this.isGameRunning = this.showLoading = false;\n    this.clicks = this.seconds = this.minutes = 0;\n    clearTimeout(this.delayTimer);\n    clearInterval(this.countInterval);\n  }\n  onClick(card: Card): void {\n    // if the user click twice and the card didn't succeed\n    if (this.clicks < 2 && !card.succeed) {\n      this.clicks++;\n      card.showImage = true; // show the 'Real' card image\n      if (this.clicks === 1) { // in the first click save the card to property 'clickedCard'\n        this.clickedCard = card;\n      } else if (this.clicks === 2) { // if it's the second click...\n        if (this.clickedCard === card) { // if the user clicked on exact the same card (checking by its reference object)\n          this.clicks--; // so he be able to click on another card.\n          return;\n        }\n        if (this.clickedCard.ID === card.ID) { // on success\n\n          setTimeout(() => {\n            this.clicks = 0;\n            this.clickedCard.succeed = true; // put the card as succeed state to true\n            card.succeed = true; // put the card as succeed state to true\n            if (this.isGameFinished () === true) { // check every time on success if the game is finished (all cards succeed)\n              this.onFinished();\n            }\n          }, 400);\n\n        } else { // on fail\n\n          setTimeout(() => {\n            this.clicks = 0; // reset the clicks\n            this.clickedCard.showImage = false; // reverse the card\n            card.showImage = false; // reverse the card\n          }, 800);\n\n        }\n      }\n    }\n    \n\n  \n  }\n  isGameFinished(): boolean {\n    if (this.cards[0] === undefined) { // this is to avoid error which happens at the beginning.\n      return false;\n    }\n\n    for (let i = 0; i < +this.boardSize; i++) { // run on all rows.\n\n      if (this.cards[i].every((card: Card) => { // run every card in that row.\n        if (card.succeed === false) { // if some card didn't succeed yet return false, which mean the game is not over.\n          return false;\n        }\n        return true; // if the card succeed return true to keep checking in the next card.\n      }) === false) { // if the function every return false which mean some card didn't succeed return false and exit from the function.\n        return false;\n      }\n\n    }\n    return true; // if all passed success (no return false happened) return true, which mean the game IS Over!.\n  }\n\n  // get the fastest Accomplishment.\n  getTheFastest(boardSize: number): number {\n    const accomplishment = this.players.find((player) => {\n      return player.size === boardSize;\n      // remember the array is already sorted, so all we need is the find the first player with same boardSize which is the fastest.\n    });\n\n    if (accomplishment === undefined) { // if there is no accomplishment return some bigggg number.\n      return 99999999999999;\n    }\n\n    return accomplishment.totalTime;\n  }\n\n  onFinished(): void {\n    const min = this.minutes;\n    const sec = this.seconds;\n\n    this.isGameOver = true;\n    this.isGameRunning = false;\n    this.clicks = this.seconds = this.minutes = 0; \n    this.cards = [];\n    clearInterval(this.countInterval);\n    const tTime = new Date().getTime() - this.startedTime; // totalTime as milliseconds.\n\n    if (tTime < this.getTheFastest(+this.boardSize)) { // if the new accomplishment is faster.\n      const dialogRef = this.dialog.open(PlayerDialogComponent , { hasBackdrop: false, data: min + ':' + sec });\n\n      dialogRef.afterClosed().subscribe(\n        (name: string) => {\n          if (name.length > 3) {\n            this.players.push({ // push a new Accomplishment\n              name: name,\n              size: +this.boardSize,\n              totalTime: tTime,\n              minutes: min,\n              seconds: sec\n            });\n            this.gameService.saveAccomplishments (this.players); // save all\n          }\n        });\n      }\n\n  }\n\n\n\n\n}\n","module.exports = \".card-panel {\\n  display: inline-block;\\n  background-color: transparent;\\n}\\n\\n.card-body {\\n  padding: 0;\\n  height: 150px;\\n  cursor: pointer;\\n}\\n\\n.img-width {\\n  width: 110px;\\n}\\n\\n.real-img {\\n  margin: 20% 0;\\n}\\n\\n@media screen and (max-width: 768px) {\\n  .card-body {\\n    height: auto;\\n  }\\n\\n  .img-style {\\n    margin-bottom: 20%;\\n  }\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY2FyZC9jYXJkLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxxQkFBcUI7RUFDckIsNkJBQTZCO0FBQy9COztBQUVBO0VBQ0UsVUFBVTtFQUNWLGFBQWE7RUFDYixlQUFlO0FBQ2pCOztBQUVBO0VBQ0UsWUFBWTtBQUNkOztBQUVBO0VBQ0UsYUFBYTtBQUNmOztBQUVBO0VBQ0U7SUFDRSxZQUFZO0VBQ2Q7O0VBRUE7SUFDRSxrQkFBa0I7RUFDcEI7QUFDRiIsImZpbGUiOiJzcmMvYXBwL2NhcmQvY2FyZC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNhcmQtcGFuZWwge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xufVxuXG4uY2FyZC1ib2R5IHtcbiAgcGFkZGluZzogMDtcbiAgaGVpZ2h0OiAxNTBweDtcbiAgY3Vyc29yOiBwb2ludGVyO1xufVxuXG4uaW1nLXdpZHRoIHtcbiAgd2lkdGg6IDExMHB4O1xufVxuXG4ucmVhbC1pbWcge1xuICBtYXJnaW46IDIwJSAwO1xufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xuICAuY2FyZC1ib2R5IHtcbiAgICBoZWlnaHQ6IGF1dG87XG4gIH1cblxuICAuaW1nLXN0eWxlIHtcbiAgICBtYXJnaW4tYm90dG9tOiAyMCU7XG4gIH1cbn1cbiJdfQ== */\"","module.exports = \"<div class=\\\"panel panel-default card-panel\\\"\\n  [@effect]=\\\"card.showImage ? 'normal' : 'reverse'\\\"\\n  *ngIf=\\\"!card.succeed\\\">\\n  <div class=\\\"panel-body card-body\\\">\\n    <img [style.display]=\\\"card.showImage ? 'block' : 'none'\\\"\\n        [src]=\\\"card.image\\\"\\n        alt=\\\"Card logo\\\"\\n        class=\\\"img-responsive img-circle img-width real-img\\\"/>\\n      <img [style.display]=\\\"card.showImage ? 'none' : 'block'\\\"\\n        [src]=\\\"card.defaultImage\\\"\\n        alt=\\\"Card logo\\\"\\n        class=\\\"img-responsive img-width\\\"/>\\n  </div>\\n</div>\\n\"","import { Component, Input } from '@angular/core';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\n\nimport { Card } from '../shared/card.model';\n\n@Component({\n  selector: 'app-card',\n  templateUrl: './card.component.html',\n  styleUrls: ['./card.component.css'],\n  animations: [\n    trigger('effect', [\n      transition('void => *', [ // when the cards are showen\n        style({\n          opacity: 0,\n          transform: 'scale(0)'\n        }),\n        animate(500, style({\n          opacity: 1,\n          transform: 'scale(1)'\n        }))\n      ]),\n      transition('* => void', [ // when the cards are removed (on a success match)\n        animate(300, style({\n          transform: 'scale(0.5)',\n          opacity: 0\n        }))\n      ]),\n\n      state('reverse', style({\n        transform: 'rotateY(180deg)' // by default the card will be reversed\n      })),\n      state('normal', style({\n        transform: 'rotateY(0deg)'\n      })),\n      transition('normal => reverse', animate(150)),\n      transition('reverse => normal', animate(250)),\n\n    ]),\n  ]\n})\nexport class CardComponent {\n\n  @Input() card: Card;\n\n  constructor() { }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2RpYWxvZ3MvcGxheWVyLWRpYWxvZy9wbGF5ZXItZGlhbG9nLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<h2 mat-dialog-title class=\\\"text-warning\\\">new Accomplishment: {{accomplishmentTime}} </h2>\\n\\n<hr>\\n\\n<mat-dialog-content>\\n\\n  <h3>NICELY DONE!!</h3>\\n  <p class=\\\"text-info\\\">you have made a new Accomplishment</p>\\n  <p class=\\\"text-info\\\">you manage to finished faster than another pepole who played this game.</p>\\n  <p></p>\\n  <mat-form-field class=\\\"full-width\\\">\\n    <input matInput class=\\\"full-width\\\" placeholder=\\\"Please enter your name:\\\" [(ngModel)]=\\\"playerName\\\" required #nameInput=\\\"ngModel\\\" maxlength=\\\"20\\\" minlength=\\\"3\\\">\\n  </mat-form-field>\\n\\n</mat-dialog-content>\\n\\n<mat-dialog-actions>\\n  <button mat-raised-button style=\\\"color: red;\\\" mat-dialog-close >Cancel</button>\\n\\n  <button mat-raised-button style=\\\"color: green;\\\" [mat-dialog-close]=\\\"playerName\\\" [disabled]=\\\"nameInput.invalid\\\">Save</button>\\n</mat-dialog-actions>\\n\"","import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material';\n\n@Component({\n  selector: 'app-player-dialog',\n  templateUrl: './player-dialog.component.html',\n  styleUrls: ['./player-dialog.component.css']\n})\nexport class PlayerDialogComponent implements OnInit {\n  constructor(@Inject(MAT_DIALOG_DATA) public data: string) {}\n\n  playerName: string;\n  accomplishmentTime: string;\n\n  ngOnInit(): void {\n    this.accomplishmentTime = this.data;\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse, HttpErrorResponse } from '@angular/common/http';\nimport { Card } from './shared/card.model';\nimport { Accomplishment } from './shared/accomplishment.model';\nimport { Observable } from 'rxjs/Observable';\n// tslint:disable-next-line:import-blacklist\nimport 'rxjs/Rx';\n\n@Injectable({providedIn: 'root'})\nexport class GameService {\n\n  constructor (private httpClient: HttpClient) { }\n\n    private allCards: Card[] = [\n        new Card(1, 'assets/images/angular.png'),\n        new Card(2, 'assets/images/asp.net.png'),\n        new Card(3, 'assets/images/bootstrap.png'),\n        new Card(4, 'assets/images/c sharp.png'),\n        new Card(5, 'assets/images/C.png'),\n        new Card(6, 'assets/images/c++.png'),\n        new Card(7, 'assets/images/css.png'),\n        new Card(8, 'assets/images/html.png'),\n        new Card(9, 'assets/images/java.png'),\n        new Card(10, 'assets/images/javascript.png'),\n        new Card(11, 'assets/images/jquery.png'),\n        new Card(12, 'assets/images/nodejs.png'),\n        new Card(13, 'assets/images/php.png'),\n        new Card(14, 'assets/images/python.png'),\n        new Card(15, 'assets/images/react.png'),\n        new Card(16, 'assets/images/sql.png'),\n        new Card(17, 'assets/images/visual basic.png'),\n        new Card(18, 'assets/images/vue.png')\n    ];\n\n    saveAccomplishments(accomplishments: Accomplishment[]): void {\n       this.httpClient.put<HttpResponse<Accomplishment[]>>\n       ('https://memory-game-c1922.firebaseio.com/accomplishments.json', accomplishments).subscribe(\n         (response) => { },\n         (error: HttpErrorResponse) => {\n           console.log(error.message);\n           console.log(error);\n         }\n       );\n    }\n\n    getAccomplishments(): Observable<Accomplishment[]> {\n\n      return this.httpClient.get<Accomplishment[]>\n      ('https://memory-game-c1922.firebaseio.com/accomplishments.json');\n    }\n\n    getCards(boardSize: number): Card[][] {\n        let arr: Card[] = [];\n        let arrToReturn: Card[][] = [];\n        let tempArr: string;\n\n        if (boardSize === 4) {\n            tempArr = JSON.stringify(this.allCards.slice(0, 8)); // will contain only the first 8 cards as JSON string\n            // then convert the 'tempArr' to JavaScript Object and to duplicate it to the 'arr'\n            // that will contain Pair cards\n            // NOTE: that i used the JSON for creating new Card instance with new Referance.\n            arr = (JSON.parse(tempArr) as Card[]).concat(JSON.parse(tempArr));\n            // and then prepare the 'arrToReturn' that sould return matrix Card[][]\n            arrToReturn = [\n                arr.slice(0, 4),\n                arr.slice(4, 8),\n                arr.slice(8, 12),\n                arr.slice(12, 16)\n            ];\n            return arrToReturn;\n        }\n        // same as boardSize === 4 just do this for all cards\n        tempArr = JSON.stringify(this.allCards);\n        arr = (JSON.parse(tempArr) as Card[]).concat(JSON.parse(tempArr));\n        arrToReturn = [\n            arr.slice(0, 6),\n            arr.slice(6, 12),\n            arr.slice(12, 18),\n            arr.slice(18, 24),\n            arr.slice(24, 30),\n            arr.slice(30, 36)\n        ];\n        return arrToReturn;\n    }\n\n    private generateRandom(number: number): number {\n        return Math.floor(Math.random() * +number); // will generate random number wich depense of type board\n        // example: if the boradType was 4 then it will genrate random number between 0-4 wich 4 not included!\n    }\n\n    suffleCards(cards: Card[][], boardSize: number): void {\n        for (let i = 0; i < 100; i++) { // run 100 times to suffle.\n            const rowToSave = this.generateRandom(boardSize);\n            const indexToSave = this.generateRandom(boardSize);\n            const cardToSave: Card = cards[rowToSave][indexToSave];\n\n            const row = this.generateRandom(boardSize);\n            const index = this.generateRandom(boardSize);\n            const secCard: Card = cards[row][index];\n\n            cards[rowToSave][indexToSave] = secCard;\n            cards[row][index] = cardToSave;\n        }\n    }\n}\n","module.exports = \".borderless td, .borderless th {\\n  border: none;\\n}\\n\\n.head-style {\\ntext-shadow: 0 0 10px gold;\\ncolor:rgba(23, 122, 134, 0.7);\\n}\\n\\n.btn-start {\\nwidth: 100%;\\n}\\n\\n.btn-stop {\\nwidth: 100%;\\n}\\n\\n.back-img {\\nbackground-image: url('back-img.jpg');\\nbackground-repeat: no-repeat;\\nbackground-attachment: fixed;\\n}\\n\\n.counter-text {\\ntext-shadow: 0 0 10px gold;\\nfont-family: fantasy;\\ncolor: aquamarine;\\nopacity: 0.8;\\ntext-align: center;\\nfont-size: 35px;\\n}\\n\\n.good-job {\\ntext-align: center;\\ncolor: #38d6f186;\\nfont-size: 75px;\\ntext-shadow: 0 0 15px wheat;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZ2FtZS9nYW1lLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxZQUFZO0FBQ2Q7O0FBRUE7QUFDQSwwQkFBMEI7QUFDMUIsNkJBQTZCO0FBQzdCOztBQUVBO0FBQ0EsV0FBVztBQUNYOztBQUVBO0FBQ0EsV0FBVztBQUNYOztBQUVBO0FBQ0EscUNBQXVEO0FBQ3ZELDRCQUE0QjtBQUM1Qiw0QkFBNEI7QUFDNUI7O0FBRUE7QUFDQSwwQkFBMEI7QUFDMUIsb0JBQW9CO0FBQ3BCLGlCQUFpQjtBQUNqQixZQUFZO0FBQ1osa0JBQWtCO0FBQ2xCLGVBQWU7QUFDZjs7QUFFQTtBQUNBLGtCQUFrQjtBQUNsQixnQkFBZ0I7QUFDaEIsZUFBZTtBQUNmLDJCQUEyQjtBQUMzQiIsImZpbGUiOiJzcmMvYXBwL2dhbWUvZ2FtZS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmJvcmRlcmxlc3MgdGQsIC5ib3JkZXJsZXNzIHRoIHtcbiAgYm9yZGVyOiBub25lO1xufVxuXG4uaGVhZC1zdHlsZSB7XG50ZXh0LXNoYWRvdzogMCAwIDEwcHggZ29sZDtcbmNvbG9yOnJnYmEoMjMsIDEyMiwgMTM0LCAwLjcpO1xufVxuXG4uYnRuLXN0YXJ0IHtcbndpZHRoOiAxMDAlO1xufVxuXG4uYnRuLXN0b3Age1xud2lkdGg6IDEwMCU7XG59XG5cbi5iYWNrLWltZyB7XG5iYWNrZ3JvdW5kLWltYWdlOiB1cmwoLi4vLi4vYXNzZXRzL2ltYWdlcy9iYWNrLWltZy5qcGcpO1xuYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbmJhY2tncm91bmQtYXR0YWNobWVudDogZml4ZWQ7XG59XG5cbi5jb3VudGVyLXRleHQge1xudGV4dC1zaGFkb3c6IDAgMCAxMHB4IGdvbGQ7XG5mb250LWZhbWlseTogZmFudGFzeTtcbmNvbG9yOiBhcXVhbWFyaW5lO1xub3BhY2l0eTogMC44O1xudGV4dC1hbGlnbjogY2VudGVyO1xuZm9udC1zaXplOiAzNXB4O1xufVxuXG4uZ29vZC1qb2Ige1xudGV4dC1hbGlnbjogY2VudGVyO1xuY29sb3I6ICMzOGQ2ZjE4NjtcbmZvbnQtc2l6ZTogNzVweDtcbnRleHQtc2hhZG93OiAwIDAgMTVweCB3aGVhdDtcbn1cbiJdfQ== */\"","module.exports = \"<div class=\\\"jumbotron\\\" style=\\\" align-content:center \\\" >\\n  <h1 class=\\\"text-center\\\">Memory Game</h1><br><br>\\n\\n\\n    <img src=\\\"favicon.ico\\\" alt=\\\"logo\\\" class=\\\"img-responsive center-block img-thumbnail\\\" /><br><br>\\n\\n    <!-- ACCOMPLISHMENTS SECTION -->\\n    <label class=\\\"text-info\\\"   for=\\\"list-accomplishments\\\">Accomplishments:</label>\\n    <p class=\\\"text-warning\\\" *ngIf=\\\"players.length === 0\\\">there is no accomplishments yet!</p>\\n    <ul class=\\\"list-group\\\" style=\\\"width: 270px; align-content: center \\\" id=\\\"list-accomplishments\\\">\\n      <li class=\\\"list-group-item\\\"  *ngFor=\\\"let player of players | sortPlayers\\\">\\n        {{player.name}}, finished at -\\n        <span class=\\\"text-warning\\\">{{player.minutes | countPipe}}:{{player.seconds | countPipe}}</span>\\n        , on - <span class=\\\"text-danger\\\">{{player.size === 4 ? '4x4' : '6x6'}}</span>.</li>\\n    <br>\\n    &nbsp;&nbsp;\\n        <button mat-raised-button color=\\\"primary\\\" class=\\\"common-btn btn\\\"  routerLink='/board'>board</button> &nbsp;&nbsp;       \\n      \\n        <button mat-raised-button color=\\\"primary\\\" class=\\\"common-btn btn\\\"  routerLink='/dashboard'>Profile</button></ul>\\n</div>\\n\\n\"","import { Component, Input } from '@angular/core';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\n\nimport { Card } from '../shared/card.model';\nimport { MatDialog } from '@angular/material';\nimport { GameService } from '../game.service';\nimport { Accomplishment } from '../shared/accomplishment.model';\n// import { PlayerDialogComponent } from '../dialogs/player-dialog/player-dialog.component';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-game',\n  templateUrl: './game.component.html',\n  styleUrls: ['./game.component.css'],\n  animations: [\n    trigger('in', [\n      transition('void => *', [\n        style({\n          transform: 'rotate(360deg) scale(0)'\n        }),\n        animate(1000, style({\n          transform: 'rotate(0) scale(1)'\n        }))\n      ])\n    ])\n  ]\n})\nexport class GameComponent {\n\n\n  constructor(private gameService: GameService ,private router: Router ,\n    private dialog: MatDialog  ) { }\n  //boardSize = '4'; // stored as string to set a default value to Select input (if as a number it won't work).\n  //cards: Card[][] = [];\n  showLoading = false;\n  isGameRunning = false;\n  isGameOver = false;\n  clickedCard: Card; // this is the first card was clicked, after well compared with the second card.\n  clicks = 0; // count the clicks. (maximum 2)\n  delayTimer;\n\n  players: Accomplishment [] = [];\n  startedTime: number; // this will hold the started time as milliseconds.\n\n  countInterval: any;\n  seconds = 0;\n  minutes = 0;\n\n  ngOnInit(): void { // getting the accomplishments from the server (firebase) if there is.\n    this.gameService.getAccomplishments().\n    subscribe(\n       (players) => {\n        if (players !== null) {\n          this.players = players;\n        }\n      }, (error: HttpErrorResponse ) => { // log to the console in error case.\n        console.log(error.message);\n        console.log(error);\n      }\n    );\n  }\n  getTheFastest(boardSize: number): number {\n    const accomplishment = this.players.find((player) => {\n      return player.size === boardSize;\n      // remember the array is already sorted, so all we need is the find the first player with same boardSize which is the fastest.\n    });\n\n    if (accomplishment === undefined) { // if there is no accomplishment return some bigggg number.\n      return 99999999999999;\n    }\n\n    return accomplishment.totalTime;\n  }\n\n  // start (board){\n    // this.router.navigateByUrl('board');\n  // }\n\n  //public onStart() {\n    // this.router.navigate(['/board']).then( (e) => {\n      // if (e) {\n        // console.log(\"Navigation is successful!\");\n      // } else {\n        // console.log(\"Navigation has failed!\");\n      // }\n    // });\n// }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n//import { GameComponent } from './game.component';\n\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    \n ],\n  declarations: [\n  \n  ]\n})\nexport class GameModule { }\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'countPipe'\n})\nexport class CountPipe implements PipeTransform {\n\n  transform(value: number): any {\n    if (value < 10) {\n      return '0' + value;\n    }\n    return value;\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { Accomplishment } from '../shared/accomplishment.model';\n\n@Pipe({\n  name: 'sortPlayers',\n  pure: false\n})\nexport class SortPlayersPipe implements PipeTransform {\n\n  transform(value: Accomplishment[]): Accomplishment[] {\n\n    const players2Return = value.\n    sort((firstPlayer: Accomplishment, secondPlayer: Accomplishment) => { // sort and put the faster at the top\n\n      if (firstPlayer.totalTime < secondPlayer.totalTime) { // if the firstPlayer is faster put him before the secondPlayer.\n        return -1;\n      } else if (firstPlayer.totalTime > secondPlayer.totalTime) {\n        return 1; // if the firstPlayer is slower put him after the secondPlayer.\n      }\n\n      return 0; // do nothing if same.\n    }).sort((firstPlayer: Accomplishment, secondPlayer: Accomplishment) => { // sort again for 6x6 and 4x4.\n\n      if (firstPlayer.size === secondPlayer.size) { // if same size do nothing\n        return 0;\n      }\n\n      if (firstPlayer.size === 6) { // if its 6x6 put the firstPlayer before secondPlayer.\n        return -1;\n      } else { // if its 4x4 put the firstPlayer after secondPlayer.\n        return 1;\n      }\n\n    });\n\n    return players2Return; // return the sorted array;\n  }\n\n}\n","// ID - will contain the indentity number.\n// image - will contain the real card image path.\n// ------- The Default Values -------\n// defaultImage - .. the default image.\n// showImage - if false show the default image else show the real card 'image'.\n// succeed - property wich tell if the card was succeed (matchs with the other card).\nexport class Card {\n    constructor (public ID: number, public image: string ,\n        public defaultImage: string = 'assets/images/default.jpg', public showImage: boolean = false,\n        public succeed: boolean = false) {}\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebase : {\n    apiKey: \"AIzaSyBkOWqTLuMGZwd6XkalBKShwriS9VGb4Rs\",\n    authDomain: \"memory-game-c1922.firebaseapp.com\",\n    databaseURL: \"https://memory-game-c1922.firebaseio.com\",\n    projectId: \"memory-game-c1922\",\n    storageBucket: \"memory-game-c1922.appspot.com\",\n    messagingSenderId: \"421569875595\"\n  }\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}